<?xml version="1.0" encoding="GBK" ?>
<beans:beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns="http://www.alibaba.com/schema/webx2-services"
    xmlns:services="http://www.alibaba.com/schema/services"
    xmlns:ml-adapters="http://www.alibaba.com/schema/services/module-loader/adapters"
    xmlns:ml-factories="http://www.alibaba.com/schema/services/module-loader/factories"
    xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:p="http://www.springframework.org/schema/p"
    xsi:schemaLocation="
        http://www.alibaba.com/schema/services http://localhost:8080/schema/services.xsd
        http://www.alibaba.com/schema/services/module-loader/adapters http://localhost:8080/schema/services-module-loader-adapters.xsd
        http://www.alibaba.com/schema/services/module-loader/factories http://localhost:8080/schema/services-module-loader-factories.xsd
        http://www.springframework.org/schema/beans http://localhost:8080/schema/www.springframework.org/schema/beans/spring-beans.xsd
    ">
    
    <!-- 
	    Webx Framework将一个WEB应用分解成多个小应用模块：app1、app2，当然名字可以任意取。
	          每个小应用模块独享一个Spring Sub Context子容器。两个子容器之间的beans无法互相注入。
	          所有小应用模块共享一个Spring Root Context根容器。根容器中的bean可被注入到子容器的bean中；反之不可以。
     
     	将一个大的应用分解成若干个小应用模块，并使它们的配置文件相对独立，这是一种很不错的开发实践。然而，如果你的应用确实很简单，你不希望把你的应用分成多个小应用模块，那么，你还是需要配置至少一个小应用模块
     -->
	
	 <!-- 支持${xxx}替换。 -->
    <services:property-placeholder>
        <services:property key="component">web</services:property>
    </services:property-placeholder>
	
	 <!-- 综合设置。 -->
    <services:webx-configuration />
	
	<!-- 基础配置。 -->
    <beans:import resource="common/webx-root.xml" />
	
    <!-- 执行管道。 -->
	<beans:import resource="common/pipeline.xml" />
	
	<!-- 可以添加 表单验证服务 -->

    <!-- 装载模块。 -->
    <services:module-loader>
        <ml-factories:class-modules>
            <ml-factories:search-packages type="$1" packages="com.taobao.wms.web.module.*" includeAbstractClasses="true"/>
        </ml-factories:class-modules>
    </services:module-loader>

</beans:beans>